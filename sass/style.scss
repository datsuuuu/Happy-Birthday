@charset "utf-8";

/*=========================================
# mixin
=========================================*/

//マップ型変数breakpointsを定義
$breakpoints: (
//キー　　値
  'sp': 'screen and (max-width: 767px)', //767px以下（スマホ）用の表示
  'md': 'screen and (min-width: 768px)' //768px以上（タブレット・PC）用の表示
) !default;

//メディアクエリ用のmixinを定義。デフォ値はmd
@mixin mq($breakpoint: md) {
//map-get(マップ型変数, キー)で値を取得
  @media #{map-get($breakpoints, $breakpoint)} {
    //この中をカスタムできる
    @content;
  }
}

/*このように @media screen and (width: 767px) { } を書かなくても、
PC用のcssを書きながらスマホ用の表示を書き足すことができます！ */



/*=========================================
# color
=========================================*/

$primary-color:#d1bb95;
$font-color:#333;





/*=========================================
# common
=========================================*/

 @include mq(md) {
     .is-sp {
         display: none;
     }
 }

 @include mq(sp) {
    .is-md {
        display: none;
    }
}

body {
    font-size: 16px;
    color: $font-color;
    font-family: "ヒラギノ明朝, ProN", serif;
    line-height: 1.6785;
}

img {
    width: 100%;
}

.inner {
    max-width:1400px;
    margin: 0 auto;
    padding: 0 40px;
    //reset.cssでbox-sizingを指定しているので、paddingを含めて１２００pxになってしまっている。
    //この場合、しっかりpaddingはついているものの要素が指定したよりも小さくなるという弊害がある。（padding分を引くから）
    box-sizing: content-box;
    //そのためデフォルトのcontent-boxに戻す。

    @include mq(sp) {
        padding: 0 15px;
    }
}

.section {
    margin-top: 160px;

    @include mq(sp) {
        margin-top: 96px;
    }
}

/* util
=================================================*/

.util-title {
    font-size: 40px;
    font-weight: 700;
    text-align: center;
    line-height: 1;
    //sectionにmtをつけていますが、これにラインハイトが含まれてしまうと誤差が生じるので、util-titleのラインハイトは１と定義しておく。
    //例えば、mt１６０をつけてもlhが１０あれば、トップの高さは高くなってしまう。

    @include mq(sp) {
        font-size: 30px;
    }

    &::after {
        content:"";
        display: block;
        height: 1px;
        width: 60px;
        background: $primary-color;
        margin: 16px auto 0;

    }
}

.util-title2 {
margin-bottom: 46px;
}

.util-link {
    //buttonのcssねこれ。buttonタグのcssは重要だよ！！
    font-size: 14px;
    letter-spacing: .1em;
    //   デザインカンプがある時のletter-spacingの求め方はAV/sizeということを覚えとこう。
    color: $primary-color;
    border: solid 1px $primary-color; 
    background: #fff;
    display: inline-block;
    //block要素にするとborderが画面幅いっぱいに広がってしまうからinline-blockね。
    padding: 10px 54px;
    transition: background-color .4s,color .4s;

    &.-active {
        background: $primary-color;
        color:#fff;
    }

    @include mq(md) {
    &:not(.-submit) {
        &:hover {
             background: $primary-color;
             color:#fff;
            }
        }
    }
  }


    


/* header
=================================================*/

.header {
    background: #fff;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 100;


    .drawer-hamburger {
        .drawer--right  & {
            right: 3px;
        }
    }

    .drawer-hamburger-icon {
        background: #d1bb95;
        height: 1px;
        

        .drawer-open & {
            background: transparent;
        }

        &::before,
        &::after {
        background: #000;
        height: 1px;
        }
    }
}



.header-inner {
    display: flex;
    align-items: center;

    @include mq(sp) {
        height: 60px;
    }

    h1 {
        height: auto;
    }
}


.header-nav {
    margin-left: auto;

    @include mq(sp) {
        top: 60px;
        background-color: $primary-color;
        padding: 24px 0;
    }
}

.header-nav-list {
    @include mq(md) {
    display: flex;
    }
}

.header-nav-item {
    & + & {
    //&:notと同じ意味
    @include mq(md) {
     margin-left: 46px;  
    }    
    }
}

.header-nav-item-link {
    display: block;
    //height,paddingの指定をしてあげるため。
    color: $font-color;
    height: 70px;
    line-height: 70px;
    //navではなく、aタグに対してline-heightを指定したのはクリック領域を大きくするため。
    letter-spacing: .1em;
    //デザインカンプがある時は文字サイズーletter-spacingでletter-spacingを求められるよ。

    @include mq(sp) {
        color:#fff;
        font-size: 18px;
       text-align: right;
       padding: 0 15px;
       height: 60px;
       line-height: 60px;
    }

    @include mq(md) {
        transition: color .4s;
        //.4秒をかけて色が変化する
        &:hover {
            color: $primary-color;
        }
    }

}

/* main
=================================================*/


.main {
    //header分の高さ
    @include mq(sp) {
        padding-top: 60px;
    }
}

/* top
=================================================*/

.top {
    position: relative;
}

.top-picture {

    @include mq(sp) {
    padding-top: 124%;
    //414(縦）/345（横）=1.2
    //つまりmargin-topは120%
    //あんま深くは考えんでいい。公式やと考えよう。
    background: url(/94B54740-A6AB-4681-B623-E540B90D2846.JPG) center center / cover;
    }

    @include mq(md) {
     padding-top: 55%;
     background: url(/Users/datsu/Desktop/中級総復習　答えのコピー/IMG_2627.JPG) top right / 100% no-repeat ;
 
    }
    
}

.top-message {

    @include mq(sp) {
        margin-top: 30px;
      

    @include mq(md) {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    background: #fff;
    padding: 82px 44px 90px 40px;
    }
   
}

.top-message-title {
    font-size: 26px;
    font-weight: 700;
}

.top-message-text {
    margin-top: 18px;

}
}

/* concept
=================================================*/

.concept-inner {
    margin-top: 64px;

    @include mq(sp) {
        margin-top: 46px;
    }

    @include mq(md) {
    display: flex;
    align-items: center;
    }
}

.concept-picture {

    img {
        width: 90%;
    }



    @include mq(md) {
    flex: 0 0 30%;
    }
    //grow:横幅が余っている時勝手に拡大していいかどうかということ
    //shrink: 横幅が足りない時、勝手に縮小していいいかどうかということ
    //basis:基本の幅
    //今回の場合はgrowとshrinkは0で基本の大きさは50%ということ。

    @include mq(sp) {
       display: block;
       width: 350px;
    }

}

.no2 {
    margin-left: 20px;
    margin-top: 80px;
}


.concept-message {

    @include mq(sp) {
    margin-top: 36px;
    }

    @include mq(md) {
    flex: 0 1 50%;
    //もし万が一に50%の幅が足りなかった場合は縮小してもいいよということ。
    margin-left: 6.6667%;
    }
    //幅を８０pxに指定したいが、例えばタブレットの場合に８０pxは広すぎる。
    //そのため全体（１２００px）から幅を取りたいpx分（８０px）を割って、１００をかけることで％で表す。
    //こうすることで、タブレットの場合も全体からの同じ比率で表示される。

  
}

.concept-message-title {
    font-size: 20px;
    font-weight: 700;
}

.concept-message-text {
    margin-top: 36px;
    font-size: 13px;

    @include mq(sp) {
        margin-top: 20px;
        margin-bottom: 10px;
    }
}

.concept-message-text1 {
    margin-top: 90px;
    font-size: 13px;

    @include mq(sp) {
        margin-top: 10px;
        margin-bottom: 90px;
    }
}

/* feature
=================================================*/

.feature-inner {
    margin-top: 64px;

    @include mq(sp) {
        margin-top: 46px;
    }

    @include mq(md) {
    display: flex;
    align-items: center;
    }
}

.feature-picture {
    @include mq(md) {
    flex: 0 0 30%;
    }
    //grow:横幅が余っている時勝手に拡大していいかどうかということ
    //shrink: 横幅が足りない時、勝手に縮小していいいかどうかということ
    //basis:基本の幅
    //今回の場合はgrowとshrinkは0で基本の大きさは50%ということ。

    img {
        width: 90%;
    }

}

.no2-2 {
    margin-right: 20px;
    margin-top: 150px;
    margin-bottom: 70px;
}

.no3-3 {

   display: flex;
   justify-content: flex-end

}


.feature-message {

    @include mq(sp) {
    margin-top: 30px;
    margin-bottom: 50px;
    }

    @include mq(md) {
    flex: 0 1 50%;
    //もし万が一に50%の幅が足りなかった場合は縮小してもいいよということ。
    margin-right: 6.6667%;
    }
    //幅を８０pxに指定したいが、例えばタブレットの場合に８０pxは広すぎる。
    //そのため全体（１２００px）から幅を取りたいpx分（８０px）を割って、１００をかけることで％で表す。
    //こうすることで、タブレットの場合も全体からの同じ比率で表示される。

  
}

.feature-message-title {
    font-size: 20px;
    font-weight: 700;
}

.feature-message-text {
    margin-top: 36px;

    @include mq(sp) {
        margin-top: 20px;
    }
}


    /* about (ここだけcss)ミスったから
=================================================*/
.about {
    color: #fff;
    position: relative;
    padding: 40px 0;
    margin-top: 250px;
  }
  
  @media screen and (max-width: 767px) {
    .about {
      background: url(../img/bg2.png) center center/cover;
      padding: 176px 0 52px;
    }
  }
  
  @media screen and (min-width: 768px) {
    .about {
      background: url(/Users/datsu/Desktop/中級総復習　答え/coffee.jpeg) center center / cover;
  }
}
  
  .about::before {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.2);
  }
  
  .about-inner {
    position: relative;
   
  }
  
  .about-title {
    font-size: 22px;
    font-weight: 700;
  }
  
  @media screen and (max-width: 767px) {
    .about-title {
      font-size: 20px;
    }
  }
  
  .about-text {
    margin-top: 28px;
  }
  
  @media screen and (max-width: 767px) {
    .about-text {
      font-size: 14px;
      margin-top: 22px;
      line-height: 1.7143;
    }
  }
  
  /* products
  =================================================*/
  .products {
        position: relative;
        padding: 30px 50px;
        margin-top: 150px;
        max-width: 1350px;
        z-index: 2;
        background: url(/Users/datsu/Desktop/中級総復習　答え/great.jpeg) center center/ cover;
  }

  .products-inner {
    z-index: 1;
  }

  .products::before {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.3);
    z-index: -1;
  }
  
  @media screen and (max-width: 767px) {
    .products {
      max-width: 340px;
      padding: 0 58px;
    }
  }
  
  .products-list {
    margin-top: 64px;
  }
  
  @media screen and (max-width: 767px) {
    .products-list {
      margin-top: 48px;
    }
  }
  
  @media screen and (min-width: 768px) {
    .products-list {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: justify;
          -ms-flex-pack: justify;
              justify-content: space-evenly;
    }
  }
  
  @media screen and (min-width: 768px) {
    .products-item {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 20%;
              flex: 0 0 20%;
    }
  }
  
  @media screen and (max-width: 767px) {
    .products-item + .products-item {
      margin-top: 40px;
    }
  }
  


.products-item-link {
    display: block;
    //とりあえずのdisplay: block;
    color: #fff;
    font-size: 14px;

    @include mq(md) {
        &:hover {
            .products-item-picture> img {
                transform: scale(0.7);
            }
        }
      }
    
    
    .products-item-picture {
        overflow: hidden;
        //scaleは大きくなるけど、既存の画像サイズからはみ出した分はhiddenするということ。
        border-radius: 150px;
        > img {
            transition:transform 1s;
        }
    }
}

.products-item-body {
    margin-top: 22px;
}

.products-item-cost {
    color: #fff;
    margin-top: 10px;
}

.products-footer {
    text-align: center;
    margin-top: 44px;

    @include mq(sp) {
        margin-top: 42px;
    }
}


/* news
=================================================*/

.news {
    max-width: 1040px;
    padding: 80px 100px;

    @include mq(sp) {
        padding: 0 40px;
    }
}

.news-list {
    margin-top: 28px;

    @include mq(sp) {
        margin-top: 25px;
    }

}

.news-item {
    border-bottom: 1px solid #000000;
}

.news-item-link {

    color: $font-color;
    padding: 22px 0;
    display: block;
    //paddingを適用させるためにdisplay: block;

    @include mq(md) {
    display: flex;
    align-items: center;

    &:hover {
        .news-item-picture > img {
            transform: translate(-50%,-50%) scale(1.05) ;
        }
    }
    }
   
}

.news-item-header {
    @include mq(md) {
    flex:0 0 230px;
    }
}

.news-item-picture {
    padding-top: 85%;
    position: relative;
    overflow: hidden;
    > img {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        transition: transform .4s;
    }
}

.news-item-body {

    @include mq(sp) {
    margin-top: 21px;
    }
    @include mq(md) {
    flex:0 1 100%;
    margin-left: 40px;
    }
} 

.news-item-title {
    font-size: 18px;
    font-weight: 700;
    margin-top: 4px;

    @include mq(sp) {
        font-size: 16px;
    }
}

.news-item-text {
    color: #888;
    margin-top: 16px;
    line-height: 1.7143;
    //デザインカンプがある時のline-heightの求め方
    //文字幅/size*100

}

.news-footer {
    text-align: center;
    margin-top: 48px;
}

/* concept2
=================================================*/

.concept2-inner {

    @include mq(md) {
    display: flex;
    align-items: center;
    //ボックス内で文字の列が中央になるということ
    flex-direction: row-reverse;
    //左右を反転する
    }

}

.concept2-picture {
    @include mq(md) {
    flex: 0 0 50%;
    }
    //grow:横幅が余っている時勝手に拡大していいかどうかということ
    //shrink: 横幅が足りない時、勝手に縮小していいいかどうかということ
    //basis:基本の幅
    //今回の場合はgrowとshrinkは0で基本の大きさは50%ということ。
}

.concept2-message {

    @include mq(sp) {
        margin-top: 34px;
    }

    @include mq(md) {
    flex: 0 1 50%;
    //もし万が一に50%の幅が足りなかった場合は縮小してもいいよということ。
    margin-right: 6.6667%;
    }
    //幅を８０pxに指定したいが、例えばタブレットの場合に８０pxは広すぎる。
    //そのため全体（１２００px）から幅を取りたいpx分（８０px）を割って、１００をかけることで％で表す。
    //こうすることで、タブレットの場合も全体からの同じ比率で表示される。

    
}

.concept2-message-title {
    font-size: 28px;
    font-weight: 700;

    @include mq(sp) {
        font-size: 20px;
    }

}

.concept2-message-text {
    margin-top: 30px;

    @include mq(sp) {
        font-size: 14px;
        line-height: 1.7143;
       
    }
}

/* contact
=================================================*/

.contact {
    background:#f5f5f5;
    margin-top: 225px;
    padding: 72px 40px 86px;

    @include mq(sp) {
        margin-top: 92px;
        padding: 56px 28px;
    }

    .util-title {
        color: $primary-color;
    }

    input[type="text"],
    input[type="email"],
    textarea {
        width: 100%;
        border: 0;
        font-size: 16px;
        padding: .2em .5em;
        box-shadow: 5px 6px 16px rgba(96,96,96,0.16);
        border-radius: 2px;
    }

    input[type="text"],
    input[type="email"] {
        height: 40px;
    }

    textarea {
        min-height: 122px;
        //最低でも122pxという意味
        resize: vertical;
        //textareaは右下のところで上下左右のサイズを調整することができる
        //今回の場合は左右にサイズ調整する必要はないのでresize: vertical;
    }
}

    .contact-form {
        margin-top: 56px;

        @include mq(sp) {
            margin-top: 26px;
        }
    }

    .contact-text {
        font-size: 14px;
        letter-spacing: .1em;
        text-align: center;
    }

    .contact-text-inline {
        font-size: 16px;
        color: #E7728E;
    }

    .contact-list {
        max-width: 510px;
        margin: 18px auto 0;
    }

    .contact-item {
        @include mq(md) {
        display: flex;
        justify-content: space-between;
        }

        & + & {
            margin-top: 32px;
        }
    }

    .contact-item-title {
       
        background: $primary-color;
        color: #fff;
        font-size: 18px;
        height: 40px;
        line-height: 40px;
        text-align: center;
        padding-left: 10px;

        @include mq(sp) {
            display: inline-block;
            font-size: 14px;
            line-height: 32px;
            height: 32px;
            padding: 0 16px;
        }

    }

    .contact-item-inline {
        font-size: 12px;
        color: #E7728E;
        vertical-align: super;
        line-height: 1;

        @include mq(sp) {
            font-size: 10px;
        }
    }

    .contact-item-input {

        @include mq(sp) {
            margin-top: 3px;
        }

        @include mq(md) {
        flex: 0 0 320px;
        margin-left: 18px;
        }
    }

    .contact-radio-wrap {
        display: inline-flex;
        //inlineとflexが一緒になったんや
        border: solid 1px #fff;
        border-radius: 1px;
        box-shadow: 5px 6px 16px rgba(96,96,96,0.16);
    }

    .contact-radio {
        position: relative;
    }

    .contact-radio-input {
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0;
        //初期設定のradioを透明にする

        &:checked + .contact-radio-part {
            background-color:$primary-color;
            color: #fff;
            border-radius:1px ;
        }

        &:focus + .contact-radio-part {
          outline: -webkit-focus-ring-color auto 5px;
          //?????
        }
    }

    .contact-radio-part {
        display: block;
        background: #fff;
        color: $primary-color;
        height: 38px;
        line-height: 38px;
        width: 80px;
        text-align: center;
        transition: background-color .4s, color .4s;
    }
   
    .contact-footer {
        text-align: center;
        margin-top: 20px;

        @include mq(sp) { 
        margin-top: 14px;
        }
    }

    .contact-privacy {
        position: relative;
        height: 22px;
        width: 22px;
        display: inline-block;
        vertical-align: middle;
    }

    .contact-privacy-part {
        display: inline-block;
        height: 22px;
        width: 22px;
        border: solid 1px $primary-color;
        background: #fff;
        position: absolute;
        top: 0;
        left: 0;

        transition:all .2s;

    }

    .contact-privacy-input {
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0;

        &:checked + .contact-privacy-part {
            width: 10px;
            border-top: 0;
            border-left: 0;
            background-color: transparent;
            //透明にするということ
            transform: rotate(45deg);
            top: -5px;
            left: 5px;
        }

        &:focus + .contact-privacy-part {
            outline: -webkit-focus-ring-color auto 5px;
            //?????
          }

          &:checked:focus + .contact-privacy-part {
            outline: none;
          }
    }

    .contact-privacy-link {
        color: $primary-color;
        text-decoration: underline;
    }

    .contact-footer-submit {
      margin-top: 46px;  

      @include mq(sp) {
          margin-top: 24px;
      }
    }


/* footer
=================================================*/

.footer {
    background: #f7f7f7;
    padding: 42px 40px 12px;

    @include mq(sp) {
        padding: 36px 0 14px;
        margin-top: 100px;
    }

}

.footer-logo {
    width: 120px;
    margin: 0 auto;
}

.footer-nav-list {

    @include mq(md) {
        display: flex;
        justify-content: center;
    }

    @include mq(sp) {
        text-align: center;
        margin-top: 16px;
    }
    margin-top: 8px;

}

.footer-nav-item {
    & + & {
        @include mq(md) {
        margin-left: 30px;
        }
    }
}

.footer-nav-item-link {
    font-size: 12px;
    color: $font-color;
    display: block;
    padding: 1em 0;

    @include mq(sp) {
        padding: .3em 0;
    }

    @include mq(md) {
        transition: opacity.4s;
        &:hover {
            opacity: .7;
        }
    }

}

.footer-sns-list {
    text-align: center;

    @include mq(sp) {
       margin-top: 14px;
    }
}

.footer-sns-item {
    display: inline-block;

    & + & {
        margin-left: 10px;
    }

}

.footer-sns-item-link {
    color: $primary-color;
    font-size: 24px;
    display: block;
    padding: .1em .5em;

    @include mq(md) {
        transition: opacity.4s;
        &:hover {
            opacity: .7;
        }
    }

}

.footer-copyright {

    color: #888;
    font-size: 12px;
    text-align: center;
    margin-top: 10px;

    @include mq(sp) {
        margin-top: 5px;
    }
}

//写真と文字が横並びになる構図の時は
//写真はflex:0,0;にして文字はflex:0,1;にする。
//文字は画像の大きさが変われば、改行していくようになる。


.iframe_wrap {
    width: 100%;
    padding-top: 50%;
    position: relative;

    iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    }
}
